import 'dart:async';\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\n\nclass GlobalHotkeyService {\n  static final GlobalHotkeyService _instance = GlobalHotkeyService._internal();\n  factory GlobalHotkeyService() => _instance;\n  GlobalHotkeyService._internal();\n  \n  late StreamController<bool> _showOverlayController;\n  Stream<bool> get showOverlayStream => _showOverlayController.stream;\n  \n  void initialize() {\n    _showOverlayController = StreamController<bool>.broadcast();\n  }\n  \n  void showSpotlightWindow() {\n    _showOverlayController.add(true);\n  }\n  \n  void hideOverlay() {\n    _showOverlayController.add(false);\n  }\n  \n  void dispose() {\n    _showOverlayController.close();\n  }\n}\n\n// Provider for the global hotkey service\nfinal globalHotkeyServiceProvider = Provider<GlobalHotkeyService>((ref) {\n  final service = GlobalHotkeyService();\n  service.initialize();\n  return service;\n});\n